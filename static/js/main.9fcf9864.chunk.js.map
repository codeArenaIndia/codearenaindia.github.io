{"version":3,"sources":["Components/Helper/Helper.js","Components/Presentational/Cards.js","pages/Planets.js","pages/Login.js","App.js","Components/Helper/Auth.js","index.js"],"names":["handleNavigationHelper","target","page","val","getAttribute","URL","searchParams","get","updateCounter","getCounter","JSON","parse","localStorage","getItem","timeNow","Date","username","Object","keys","length","toLowerCase","setItem","stringify","getTime","startDate","endDate","timeDiff","time","console","log","count","Cards","results","key","name","className","population","diameter","gravity","climate","rotation_period","Math","floor","random","style","width","height","Planets","useState","planets","setPlanets","setPage","setCount","next","setNext","query","setQuery","loading","setLoading","restricted","setRestricted","setUsername","getResults","queries","pages","a","swapi","response","maxPage","res","useEffect","handleSearch","func","wait","immediate","timeout","context","this","args","arguments","later","apply","callNow","clearTimeout","setTimeout","debounce","value","padding","toUpperCase","to","pathname","state","logout","type","onChange","event","placeholder","data-pointer","onClick","data-nav","class","map","color","display","Login","props","password","setPassword","isAuth","setIsAuth","loginError","setLoginError","location","useLocation","preventDefault","birth_year","removeItem","onSubmit","FormGroup","controlId","FormControl","autoFocus","e","Button","block","disabled","marginTop","App","redirctTo","setRedirctTo","isLoggedIn","history","createBrowserHistory","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9fcf9864.chunk.js","sourcesContent":["const extractPages = (page) =>{\r\n    if(page && page !== null){\r\n        var url = new URL(page);\r\n        return url.searchParams.get('page');\r\n    }else {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport const generateRandom = () => {\r\n  return Math.floor(Math.random() * 3);\r\n }\r\n\r\n\r\nexport const handleNavigationHelper = target => {\r\n    var val = extractPages(target.getAttribute(\"data-nav\"));\r\n    if(val && val !== null){\r\n        return val;\r\n    }\r\n  }\r\n\r\nexport function debounce(func, wait, immediate) {\r\n    var timeout;\r\n    return function() {\r\n      var context = this, args = arguments;\r\n      var later = function() {\r\n        timeout = null;\r\n        if (!immediate) func.apply(context, args);\r\n      };\r\n      var callNow = immediate && !timeout;\r\n      clearTimeout(timeout);\r\n      timeout = setTimeout(later, wait);\r\n      if (callNow) func.apply(context, args);\r\n    };\r\n  };\r\n\r\n  export function updateCounter(){\r\n    let getCounter = JSON.parse(localStorage.getItem('counter')) || {};\r\n    let timeNow = new Date();\r\n    let username= getCounter.username;\r\n    if(Object.keys(getCounter).length === 0 || getCounter.username.toLowerCase() === 'luke skywalker' ){\r\n      localStorage.setItem('counter',JSON.stringify({\"count\":1,\"time\": timeNow.getTime(),'username':username}));\r\n      return true;\r\n    }\r\n    else {\r\n      let timeDiff = getMinutesBetweenDates(getCounter.time,timeNow);\r\n      console.log(timeDiff);\r\n      if(timeDiff > 1){\r\n        localStorage.setItem('counter',JSON.stringify({\"count\":1,\"time\": timeNow.getTime(),'username':username}));\r\n      }\r\n      else {\r\n        if(getCounter.count < 17){\r\n          localStorage.setItem('counter',JSON.stringify({\"count\":getCounter.count+1,\"time\": timeNow.getTime(),'username':username}));\r\n          return true;\r\n        }\r\n        else{\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    \r\n  }\r\n\r\n  function getMinutesBetweenDates(startDate, endDate) {\r\n    console.log(startDate);\r\n    console.log(endDate);\r\n      var diff = endDate - startDate;\r\n      return (diff / 60000);\r\n  }","import React from 'react';\r\nimport {  generateRandom } from '../Helper/Helper';\r\n\r\nfunction Cards({results}){\r\n    return (\r\n        <div key={results.name} className=\"plant-cards card\">\r\n            <div className=\"card-body\">\r\n            <div className=\"card-box-body\">\r\n                <p><span>Population:</span> <span  className=\"text-green bold\">{results.population}</span></p>\r\n                <div className=\"width-100 diamter-water common-card \">\r\n                    <p className=\"width-100 \"><span>Diameter: </span> <span className=\"text-red bold\">{results.diameter}</span></p>\r\n                    <p className=\"width-100 \"><span>Gravity: </span><span className=\"text-red bold\">{results.gravity}</span></p>\r\n                </div>\r\n                <div className=\"width-100 climate-rotation common-card\">\r\n                    <p className=\"width-100\"><span>Climate: </span> <span className=\"text-red bold\">{results.climate}</span></p>\r\n                    <p className=\"width-100\"><span>Rotation period: </span><span className=\"text-red bold\">{results.rotation_period}</span></p>\r\n                </div>\r\n                \r\n            </div>\r\n            <div className=\"card-box-name\">\r\n                <p>{results.name}</p>\r\n            </div>\r\n            </div>\r\n            <div className={`planet-img gradient${generateRandom()}`} style={{width: `${results.population.length*18}px`,height: `${results.population.length*18}px`}}></div>\r\n            <div className=\"opacity-body\">\r\n            </div>\r\n        </div>\r\n    )     \r\n}\r\nexport default Cards;","import React , {useState, useEffect } from 'react';\r\nimport swapi from 'swapi-node';\r\nimport { handleNavigationHelper, debounce ,updateCounter} from '../Components/Helper/Helper'\r\nimport \"./Planets.css\";\r\nimport { Link } from 'react-router-dom';\r\nimport Cards from '../Components/Presentational/Cards'\r\n\r\nexport default function Planets(){\r\n  const [planets,setPlanets] = useState([]);\r\n  const [page,setPage] = useState(1)\r\n  const [count,setCount] = useState(null);\r\n  const [next,setNext] = useState(null);\r\n  const [query,setQuery] = useState(\"\");\r\n  const [loading,setLoading] = useState(\"none\");\r\n  const [restricted,setRestricted] = useState(\"\");\r\n  const [username,setUsername]= useState(\"\");\r\n\r\n\r\n  const getResults = async(queries,pages) =>{\r\n    if(!updateCounter()){\r\n      setPlanets([]);\r\n      setRestricted(\"Maximum Api request limit reached. Please try after a minute.\")\r\n      return false;\r\n    }\r\n    else{\r\n      setRestricted(\"\")\r\n    }\r\n    setLoading(\"block\");\r\n    try{\r\n      const response =  await swapi.get(`https://swapi.co/api/planets/?page=${pages}&format=json&search=${queries}`);\r\n        var maxPage = response.count/10;\r\n        if(planets.length !== 0){\r\n          let res = [...planets,...response.results];\r\n          setPlanets(res);\r\n        }else {\r\n          setPlanets(response.results);\r\n        }\r\n        setCount(response.count);\r\n        if(maxPage > page){\r\n          setNext(response.next);\r\n        }else {\r\n          setNext(\"done\");\r\n        }\r\n    } catch (err){\r\n        console.log('Error',err);\r\n    }\r\n    setLoading(\"none\");\r\n  }\r\n  useEffect(()=>{\r\n    getResults(query,page);\r\n    setUsername(JSON.parse(localStorage.getItem('counter')).username);\r\n  },[query,page]);\r\n  \r\n  const handleSearch = debounce(function(target) {\r\n    setPlanets([]);\r\n    setQuery(target.value);\r\n    setPage(1);\r\n  }, 1000);\r\n\r\n  return (\r\n    <div className=\"planetContainer col-md-12 npr\">\r\n      <header className=\"col-md-12 col-xs-12\">\r\n        <h1 className=\"col-md-5 title pull-left\">Galactic Empire: Planets</h1>\r\n        <div className=\"text-red col-md-4 pull-left\" style={{padding: \"15px\"}}>Welcome {username.toUpperCase()}</div>\r\n        <div className=\"col-md-3 pull-left\">\r\n            <Link to={{\r\n                  pathname: '/login',\r\n                  state: {\r\n                    logout: true\r\n                  }\r\n            }}><button type=\"button\" className=\"btn btn-danger transparent pull-right\">Sign Out</button>\r\n          </Link>\r\n        </div>\r\n      </header>\r\n        <input type=\"search\" className=\"searchBar col-md-3 pull-left\" onChange={event=> handleSearch(event.target)} placeholder=\"Search Planets\"/>\r\n        <button type=\"button\" className=\"loadmore-btn btn btn-success transparent pull-left\" data-pointer={loading} onClick={event => setPage(handleNavigationHelper(event.target))} data-nav={next}>{loading === \"block\" ? \"loading...\" : \"Load More\"}</button>\r\n        <p  className=\"count col-md-2 pull-left text-white\">Showing: {planets.length} of {count ? count : 0}</p>\r\n        <div className=\"planet-list col-md-12 col-xs-12 style-2 scrollbar\">\r\n          {restricted !== \"\" ? (<div class=\"alert alert-danger\">{restricted}</div>) : \"\"}\r\n            {planets.map((results,key) => (\r\n                <Cards key={results.name +key} results={results}/>\r\n            ))}\r\n            {planets.length === 0 && loading === \"none\" ? (<p style={{color: \"#fff\"}}>No record found</p>) : (\"\")}\r\n            <div className=\"spinner\" style={{display: `${loading}`}}></div>\r\n        </div>\r\n    </div>\r\n  )\r\n}","import React, { useState } from 'react';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport swapi from 'swapi-node';\r\nimport { Button, FormGroup, FormControl } from \"react-bootstrap\";\r\nimport \"./Login.css\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function Login(props) {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [isAuth,setIsAuth] = useState(false);\r\n  const [loginError,setLoginError] = useState(false);\r\n  const [loading,setLoading] = useState(false);\r\n  const location = useLocation();\r\n\r\n  if (isAuth) {\r\n    return <Redirect to=\"/planets\"/>\r\n  }\r\n  \r\n  if (location.state && location.state.logout === true) {\r\n    localStorage.removeItem(\"user\");\r\n  }\r\n  function validateForm() {\r\n    return username.length > 0 && password.length > 0;\r\n  }\r\n\r\n  async function handleSubmit(event) {\r\n    event.preventDefault();\r\n    setLoading(true);\r\n    try{\r\n        const response =  await swapi.get(`https://swapi.co/api/people/?search=${username}&format=json`);\r\n        if(username.toLowerCase() === response.results[0].name.toLowerCase() && password === response.results[0].birth_year){\r\n          let timeNow = new Date();\r\n          localStorage.setItem('user',JSON.stringify({\"isLoggedIn\":true,\"username\":username}));\r\n          localStorage.setItem('counter',JSON.stringify({\"count\":1,\"time\": timeNow.getTime(),'username':username}));\r\n          setIsAuth(true);\r\n        }\r\n        else {\r\n          setLoginError(true);\r\n        }\r\n    } catch (err){\r\n      setLoginError(true);\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"Login\">\r\n      <h1 className=\"col-md-5 title\">Galactic Empire</h1>\r\n      <h2 className=\"col-md-12 login-title text-white\">Login to database</h2>\r\n      <form onSubmit={handleSubmit}>\r\n      <h5 className=\"col-md-12 login-title\">May the force be with you</h5>\r\n        <FormGroup controlId=\"username\" >\r\n          <label className=\"text-white\">Username (case-insensitive)</label>\r\n          <FormControl\r\n            autoFocus\r\n            type=\"text\"\r\n            value={username}\r\n            onChange={e => setUsername(e.target.value)}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup controlId=\"password\" >\r\n          <label  className=\"text-white\">Password</label>\r\n          <FormControl\r\n            value={password}\r\n            onChange={e => setPassword(e.target.value)}\r\n            type=\"password\"\r\n          />\r\n        </FormGroup>\r\n        <Button block className=\"btn-success\"  disabled={!validateForm()} type=\"submit\">\r\n            {loading ? \"Loading...\" : \"Login\"}\r\n        </Button>\r\n        {loginError ? (<div style={{marginTop:\"20px\"}} className=\"alert alert-danger alert-dismissible fade show\">Invalid Credentials</div>) : (\"\")}\r\n      </form>\r\n    </div>\r\n  );\r\n}","import React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect  } from \"react-router-dom\";\nimport Planets from './pages/Planets';\nimport Login from './pages/Login';\nimport Auth from './Components/Helper/Auth'\nimport { createBrowserHistory } from 'history'\n\nexport default function App(){\n  const [redirctTo, setRedirctTo] = useState(false);\n  useEffect(()=>{\n    if (Auth()) {\n      setRedirctTo(true);\n    }\n  },[]);\n  return(\n    <div className=\"App\">\n        <Router  history={createBrowserHistory}>\n        {\n          redirctTo ? <Redirect to=\"/planets\"/> :  <Redirect to=\"/login\"/>\n        }\n        <Switch>\n            <Route exact path=\"/login\">\n              <Login />\n            </Route>\n            <Route exact path=\"/planets\">\n              <Planets />\n            </Route>\n          </Switch>\n        </Router>\n    </div>\n  )\n}","export default function Auth(){\r\n    const user = JSON.parse(localStorage.getItem('user')) || {};\r\n    return user.isLoggedIn ? true : false;\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}